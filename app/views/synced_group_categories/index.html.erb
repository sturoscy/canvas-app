<div id="section-groups">

  <div class="row">
    <div class="span12">
      <div class="page-header">
        <h1>Groups by Section <small>create and sync groups by course section</small></h1>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="span12">
      <div class="well">

        <div id="section-groups-course-details">
          <h5>Enter the Course Identifier</h5>
          <div class="form-inline">
            <%= text_field_tag(:course_id, nil, placeholder: "Canvas Course ID", class: "input-xlarge") %>
            <div class="btn-group">
              <button id="sync-section-groups" class="btn">Run Full Sync</button>
              <button class="btn start-manual-sync">Manual Sync</button>
              <button class="btn sync-help"><i class="fa fa-question-circle"></i></button>
            </div> 
            <div id="sync-instructions" class="alert alert-info">
              <ul class="unstyled">
                <li>
                  <h5>Full Sync</h5>
                  The full sync will create a new group set called 'Groups for Sections' and place students in groups
                  according to their section (one group for each section).  There is no need to have a group set previously
                  created in Canvas. Simply enter the course ID above and click Run Full Sync.
                </li>
                <li>
                  <h5>Manual Sync</h5>
                  The manual sync assumes there are group sets and groups already created in Canvas. The manual sync should
                  be used for a more granular sync method. Enter the course ID, click Manual Sync, choose a group category, and sync any section
                  to any group (or multiple sections per group via multi-select)
                </li>
                <li>
                  <h5>Group CSV Export</h5>
                  To export groups (from a category) to CSV:
                  <ol>
                    <li>Enter the course ID and click Manual Sync</li>
                    <li>Choose a Group Category</li>
                    <li>Click Export to CSV</li>
                  </ol>
                </li>
              </ul>
            </div>
          </div>
        </div>

        <br />

        <div id="manual-sync-data">
          <div class="form-inline">
            <div id="manual-group-category" class="row">
              <div id="group-category-placeholder" class="span4"></div>
            </div>
            <div id="manual-groups-sections"></div>
          </div>
        </div>

        <br />

        <%= render partial: "shared/status_report" %>
        <%= render partial: "shared/progress_bar" %>        

      </div>
    </div>
    <div class="span12">
      <div class="errors"></div>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span12">
      <div id="section-groups-data">
        <h3>Synced Categories & Groups</h3>
        <table id="section-groups-table" class="table table-bordered table-condensed">
          <tbody>
            <% @synced_group_categories.each do |group_category| %>
              <% if !group_category.deleted %>
                <%= render partial: "active",   locals: { group_category: group_category } %>
              <% else %>
                <%= render partial: "deleted",  locals: { group_category: group_category } %>
              <% end %>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Bootstrap Data to a Backbone Collection. -->
  <%= content_tag :div, class: "synced_group_categories_data", data: {synced_group_categories: @synced_group_categories} do %><% end %>
  <%= content_tag :div, class: "synced_groups_data", data: {synced_groups: @synced_group_categories.map { |synced_group_category| synced_group_category.synced_groups }} do %><% end %>
  <script>
    this.synced_group_categories  = new CanvasApp.Collections.SyncedGroupCategories();
    this.synced_groups            = new CanvasApp.Collections.SyncedGroups();
    this.synced_group_categories.reset($(".synced_group_categories_data").data("synced-group-categories"));
    _.each($(".synced_groups_data").data("synced-groups"), function(synced_groups, index) {
      this.synced_group_categories.models[index].synced_groups.reset(synced_groups);
      this.synced_groups.add(synced_groups);
    });
  </script>

</div>